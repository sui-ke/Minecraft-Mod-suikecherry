package suike.suikecherry.mixin;

import suike.suikecherry.item.ModItemBrush;

import net.minecraft.util.EnumHand;
import net.minecraft.item.ItemStack;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.ItemRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.entity.AbstractClientPlayer;

import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin(ItemRenderer.class)
public abstract class ItemRendererMixin {

    @Inject(
        method = "renderItemInFirstPerson(Lnet/minecraft/client/entity/AbstractClientPlayer;FFLnet/minecraft/util/EnumHand;FLnet/minecraft/item/ItemStack;F)V",
        at = @At(
            value = "INVOKE",
            target = "Lnet/minecraft/client/renderer/ItemRenderer;renderItemSide(Lnet/minecraft/entity/EntityLivingBase;Lnet/minecraft/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemCameraTransforms$TransformType;Z)V",
            shift = At.Shift.BEFORE
        )
    )
    private void onRenderItemInFirstPerson(AbstractClientPlayer player, float partialTicks, float pitch, EnumHand hand, float swingProgress, ItemStack stack, float equipProgress, CallbackInfo ci) {
        if (stack.isEmpty() || !(stack.getItem() instanceof ModItemBrush)) return;
        System.out.println("调用 onRenderItemInFirstPerson 方法");

        // 计算动画进度
        float progress = (player.getItemInUseCount() - partialTicks + 1.0F) / ModItemBrush.MAX_USE_DURATION;
        float animationFactor = (float) Math.sin(progress * Math.PI * 8) * 0.1F;
        
        GlStateManager.pushMatrix();
        // 应用物品变换
        GlStateManager.rotate(animationFactor * 50.0F, 1, 0, 0); // X轴旋转
        GlStateManager.rotate(animationFactor * 30.0F, 0, 0, 1); // Z轴旋转
        GlStateManager.translate(0, animationFactor * 0.1F, 0);  // Y轴偏移
        GlStateManager.popMatrix();
    }
}