package suike.suikecherry.mixin;

import suike.suikecherry.item.ModItemBrush;
import suike.suikecherry.client.render.item.BrushAnimator;

import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.ItemStack;
import net.minecraft.util.EnumHandSide;

import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin(ModelBiped.class)
public abstract class ModelBipedMixin {

    @Shadow public ModelRenderer bipedLeftArm;
    @Shadow public ModelRenderer bipedRightArm;

    @Shadow public ModelBiped.ArmPose leftArmPose;
    @Shadow public ModelBiped.ArmPose rightArmPose;

    @Shadow public ModelRenderer bipedHead;

    @Inject(method = "setRotationAngles", at = @At("HEAD"))
    private void onSetRotationAnglesHEAD(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entity, CallbackInfo ci) {
        System.out.println("调用 setRotationAngles HEAD 方法");
        if (entity instanceof EntityPlayer) {
            EntityPlayer player = (EntityPlayer) entity;
            ItemStack activeItem = player.getActiveItemStack();

            // 设置刷子动作姿势
            if (!activeItem.isEmpty() && activeItem.getItem() == ModItemBrush.INSTANCE) {
                if (player.getPrimaryHand() == EnumHandSide.RIGHT) {
                    rightArmPose = ModelBiped.ArmPose.BOW_AND_ARROW;
                } else {
                    leftArmPose = ModelBiped.ArmPose.BOW_AND_ARROW;
                }
            }
        }
    }

    @Inject(method = "setRotationAngles", at = @At("RETURN"))
    private void onSetRotationAnglesRETURN(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entity, CallbackInfo ci) {
        System.out.println("调用 setRotationAngles RETURN 方法");
        if (entity instanceof EntityPlayer) {
            EntityPlayer player = (EntityPlayer) entity;
            ItemStack activeItem = player.getActiveItemStack();

            // 应用刷子动画
            if (!activeItem.isEmpty() && activeItem.getItem() == ModItemBrush.INSTANCE) {
                BrushAnimator.animateBrushing(player, bipedRightArm, bipedLeftArm);
                BrushAnimator.animateBrushHold(bipedRightArm, bipedLeftArm, bipedHead, player.getPrimaryHand() == EnumHandSide.RIGHT);
                return;
            }
        }
    }
}